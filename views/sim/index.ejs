<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
    <meta name="generator" content="Hugo 0.84.0">
    <title>Dashboard Template Â· Bootstrap v5.0</title>

    <link rel="canonical" href="https://getbootstrap.com/docs/5.0/examples/dashboard/">


    <link media="screen" rel="stylesheet" href="assets/maptalks/maptalks.css" type="text/css">
    <script type="text/javascript" src="assets/maptalks/maptalks.min.js"></script>

    <link href="assets/font-awesome/css/font-awesome.min.css" rel="stylesheet">
    <link href="styles.css" rel="stylesheet">



    <!-- Bootstrap core CSS -->
    <link href="assets/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <script type="text/javascript" src="assets/jquery/jquery.min.js"></script>





    <link href="assets/select2/css/select2.min.css" rel="stylesheet" />
    <script src="assets/select2/js/select2.min.js"></script>


    <link href="assets/jquery-ui-1.13.2.custom/jquery-ui.css" rel="stylesheet">
    <script src="assets/jquery-ui-1.13.2.custom/jquery-ui.js"></script>

    <link href="assets/jsonViewer/json-viewer.css" rel="stylesheet">
    <script type="text/javascript" src="assets/jsonViewer/json-viewer.js"></script>

    <script>
        var map;
        var map1_center = [];
        var map1_extend, map1_zoom;
        var selectedMapObject;

        var mapObjectCnt = 0;
        var iconSet = [];

        var geoItems = [];
        var geoItemsRange = [];
        var geoItemsOptions = [];
    </script>







    <style>
        /*
 * Sidebar
 */

        .sidebar {
            position: fixed;
            top: 0;
            /* rtl:raw:
  right: 0;
  */
            bottom: 0;
            /* rtl:remove */
            left: 0;
            z-index: 100;
            /* Behind the navbar */
            padding: 48px 0 0;
            /* Height of navbar */
            box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);
        }

        @media (max-width: 767.98px) {
            .sidebar {
                top: 5rem;
            }
        }

        .sidebar-sticky {
            position: relative;
            top: 0;
            height: calc(100vh - 48px);
            padding-top: .5rem;
            overflow-x: hidden;
            overflow-y: auto;
            /* Scrollable contents if viewport is shorter than content. */
        }

        .sidebar .nav-link {
            font-weight: 500;
            color: #333;
        }

        .sidebar .nav-link .feather {
            margin-right: 4px;
            color: #727272;
        }

        .sidebar .nav-link.active {
            color: #2470dc;
        }

        .sidebar .nav-link:hover .feather,
        .sidebar .nav-link.active .feather {
            color: inherit;
        }

        .sidebar-heading {
            font-size: .75rem;
            text-transform: uppercase;
        }



        html,
        body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;

        }

        .container-fluid {
            height: 100%;
            width: 100%;
        }

        .tab-pane {
            padding: 20px;
        }

        .draggable {
            cursor: move;
            /* fallback if grab cursor is unsupported */
            cursor: grab;
            cursor: -moz-grab;
            cursor: -webkit-grab;
            opacity: 0.8;
            /*
            position: absolute;
            border: 1px solid black;

            overflow: hidden;*/
        }


        .draggable:active {
            cursor: grabbing;
            cursor: -moz-grabbing;
            cursor: -webkit-grabbing;

        }

        .closeCard {
            color: aqua;

        }

        .closeCard:hover {
            color: rgb(255, 251, 25);
        }

        .closeCard:active {
            color: rgb(247, 0, 0);


        }

        #Layer1 {
            position: absolute;
            


            width: 0px;
            height: 0px;
            z-index: 1;

        }

        .ui-resizable-helper {
            border: 3px dotted rgb(255, 217, 0);
        }
    </style>
</head>

<body data-bs-theme="dark">


    <div class="container-fluid ">
        <div id="map"></div>

        <div class="row">

            <!-- Left panel -->
            <div class="col-md-3 themed-grid-col" >
                <%- include("../pages/dashboard") -%>
            </div>


            <!-- Center panel -->
            <div class="col-md-3 themed-grid-col"  >


            </div>
           <!-- Notifications -->
            <div class="col-md-6 themed-grid-col"  >

                <div class="position-fixed top-0 end-0 p-3  " style="z-index: 11">
                  <div id="liveToast" class="toast  bg-warning" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                      <img src="assets/css/images/POLICE.png" width="24" class="rounded me-2" alt="...">
                      <strong class="me-auto" >Bootstrap</strong>
                      <small>11 mins ago</small>
                      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body">
                      Hello, world! This is a toast message.
                    </div>
                  </div>
                </div>

            </div>


        </div>
        
    </div>
   


    <script src="assets/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script>
         var toastLiveExample = document.getElementById('liveToast')
         var toasts=[]
         var toastCount=0
        //Template functions
        var tmp = {
        toast: function () {


               
                var toast = new bootstrap.Toast(toastLiveExample)
                toasts.push(toast)
                toasts[toastCount].show()
               
                toastCount++;

        }
    }
      
        $(function () {
tmp.toast()

            $(".draggable").resizable({
                helper: "ui-resizable-helper"


            });

            $(".draggable").resizable();
            //  $(".draggable").draggable();


            $('.draggable').draggable({
                start: function () {
                    $('.draggable').css('zIndex', 9990);
                    $(this).css('zIndex', 9999);
                }
            });

            $('.draggable').click(function () {
                $('.draggable').css('zIndex', 9990);
                $(this).css('zIndex', 9999);
            });


        });
    </script>
    <script>
        var map = new maptalks.Map('map', {
            center: [-0.113049, 51.498568],
            zoom: 14,
            baseLayer: new maptalks.TileLayer('base', {
                urlTemplate: 'https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',
                subdomains: ["a", "b", "c", "d"],
                attribution: '&copy; <a href="http://osm.org">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/">CARTO</a>'
            }),
            layers: [
                new maptalks.VectorLayer('v')
            ]
        });
    </script>
</body>

</html>